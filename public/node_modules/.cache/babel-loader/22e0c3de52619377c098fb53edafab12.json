{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\metqua\\\\src\\\\components\\\\ButtonContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ButtonContainer = styled.span`\n  position: fixed;\n  bottom: 32px;\n  left: 32px;\n  align-items: center;\n  height: 32px;\n  width: 32px;\n  justify-content: center;\n  z-index: 1000;\n  cursor: pointer;\n  animation: fadeIn 0.3s;\n  opacity: 0.5;\n  background: #3b3b98;\n  border-radius: 4px;\n  transition: opacity 0.4s, color ease-in-out 0.2s, background ease-in-out 0.2s;\n  display: ${_ref => {\n  let {\n    isScrollButtonVisible\n  } = _ref;\n  return isScrollButtonVisible ? 'flex' : 'none';\n}};\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n_c = ButtonContainer;\n\nconst BackToTopButton = () => {\n  _s();\n\n  const [showButton, setShowButton] = useState(false);\n  useEffect(() => {\n    const checkScrollHeight = () => {\n      if (!showButton && window.pageYOffset > 400) {\n        setShowButton(true);\n      } else if (showButton && window.pageYOffset <= 400) {\n        setShowButton(false);\n      }\n    };\n\n    window.addEventListener('scroll', checkScrollHeight);\n    return () => {\n      window.removeEventListener('scroll', checkScrollHeight);\n    };\n  }, [showButton]);\n\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(ButtonContainer, {\n    isScrollButtonVisible: showButton,\n    onClick: scrollToTop,\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: 24,\n      height: 24,\n      viewBox: \"0 0 24 24\",\n      fill: \"none\",\n      stroke: \"#ffffff\",\n      strokeWidth: 2,\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      children: /*#__PURE__*/_jsxDEV(\"path\", {\n        d: \"M12 19V5M5 12l7-7 7 7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BackToTopButton, \"rGOrX3CCwlIbUUAZRpGZUtVAB5g=\");\n\n_c2 = BackToTopButton;\nexport default BackToTopButton;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ButtonContainer\");\n$RefreshReg$(_c2, \"BackToTopButton\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/metqua/src/components/ButtonContainer.js"],"names":["React","useState","useEffect","styled","ButtonContainer","span","isScrollButtonVisible","BackToTopButton","showButton","setShowButton","checkScrollHeight","window","pageYOffset","addEventListener","removeEventListener","scrollToTop","scrollTo","top","behavior"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,eAAe,GAAGD,MAAM,CAACE,IAAK;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AAAA,MAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA,SACTA,qBAAqB,GAAG,MAAH,GAAY,MADxB;AAAA,CAC+B;AAC5C;AACA;AACA;AACA;AACA,CArBA;KAAMF,e;;AAuBN,MAAMG,eAAe,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,KAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,iBAAiB,GAAG,MAAM;AAC9B,UAAI,CAACF,UAAD,IAAeG,MAAM,CAACC,WAAP,GAAqB,GAAxC,EAA6C;AAC3CH,QAAAA,aAAa,CAAC,IAAD,CAAb;AACD,OAFD,MAEO,IAAID,UAAU,IAAIG,MAAM,CAACC,WAAP,IAAsB,GAAxC,EAA6C;AAClDH,QAAAA,aAAa,CAAC,KAAD,CAAb;AACD;AACF,KAND;;AAQAE,IAAAA,MAAM,CAACE,gBAAP,CAAwB,QAAxB,EAAkCH,iBAAlC;AACA,WAAO,MAAM;AACXC,MAAAA,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqCJ,iBAArC;AACD,KAFD;AAGD,GAbQ,EAaN,CAACF,UAAD,CAbM,CAAT;;AAeA,QAAMO,WAAW,GAAG,MAAM;AACxBJ,IAAAA,MAAM,CAACK,QAAP,CAAgB;AAAEC,MAAAA,GAAG,EAAE,CAAP;AAAUC,MAAAA,QAAQ,EAAE;AAApB,KAAhB;AACD,GAFD;;AAIA,sBACE,QAAC,eAAD;AAAiB,IAAA,qBAAqB,EAAEV,UAAxC;AAAoD,IAAA,OAAO,EAAEO,WAA7D;AAAA,2BACE;AACE,MAAA,KAAK,EAAE,EADT;AAEE,MAAA,MAAM,EAAE,EAFV;AAGE,MAAA,OAAO,EAAC,WAHV;AAIE,MAAA,IAAI,EAAC,MAJP;AAKE,MAAA,MAAM,EAAC,SALT;AAME,MAAA,WAAW,EAAE,CANf;AAOE,MAAA,aAAa,EAAC,OAPhB;AAQE,MAAA,cAAc,EAAC,OARjB;AAAA,6BAUE;AAAM,QAAA,CAAC,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA;AAVF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAtCD;;GAAMR,e;;MAAAA,e;AAwCN,eAAeA,eAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ButtonContainer = styled.span`\r\n  position: fixed;\r\n  bottom: 32px;\r\n  left: 32px;\r\n  align-items: center;\r\n  height: 32px;\r\n  width: 32px;\r\n  justify-content: center;\r\n  z-index: 1000;\r\n  cursor: pointer;\r\n  animation: fadeIn 0.3s;\r\n  opacity: 0.5;\r\n  background: #3b3b98;\r\n  border-radius: 4px;\r\n  transition: opacity 0.4s, color ease-in-out 0.2s, background ease-in-out 0.2s;\r\n  display: ${({ isScrollButtonVisible }) =>\r\n    isScrollButtonVisible ? 'flex' : 'none'};\r\n\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst BackToTopButton = () => {\r\n  const [showButton, setShowButton] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const checkScrollHeight = () => {\r\n      if (!showButton && window.pageYOffset > 400) {\r\n        setShowButton(true);\r\n      } else if (showButton && window.pageYOffset <= 400) {\r\n        setShowButton(false);\r\n      }\r\n    };\r\n\r\n    window.addEventListener('scroll', checkScrollHeight);\r\n    return () => {\r\n      window.removeEventListener('scroll', checkScrollHeight);\r\n    };\r\n  }, [showButton]);\r\n\r\n  const scrollToTop = () => {\r\n    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n  };\r\n\r\n  return (\r\n    <ButtonContainer isScrollButtonVisible={showButton} onClick={scrollToTop}>\r\n      <svg\r\n        width={24}\r\n        height={24}\r\n        viewBox=\"0 0 24 24\"\r\n        fill=\"none\"\r\n        stroke=\"#ffffff\"\r\n        strokeWidth={2}\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      >\r\n        <path d=\"M12 19V5M5 12l7-7 7 7\" />\r\n      </svg>\r\n    </ButtonContainer>\r\n  );\r\n};\r\n\r\nexport default BackToTopButton;"]},"metadata":{},"sourceType":"module"}